(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{359:function(e,t,i){"use strict";i.r(t);var o=i(33),v=Object(o.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"git-操作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-操作"}},[e._v("#")]),e._v(" git 操作")]),e._v(" "),i("ol",[i("li",[i("p",[i("code",[e._v("git pull")]),e._v(" 拉取代码")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git push")]),e._v(" 推送代码")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git log")]),e._v(" 只能查看commit记录无法查看修改的文件列表，\n"),i("code",[e._v("git log --stat")]),e._v(" 查看commit记录及修改的文件列表(常用)")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git show ${commid}")]),e._v("  查看每次修改的commit的每个文件具体修改的内容")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git reset ${commitId}")]),e._v("  回退代码，被回退的代码会处于修改状态，需要放弃修改，及即可删除这些修改")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git reflog")]),e._v(" 可以查看所有的记录包括\n"),i("code",[e._v("git reset")]),e._v(" 之前的记录，可以用于撤销\n"),i("code",[e._v("git reset")]),e._v(" 的作用")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git merge --abort")]),e._v(" 取消合并")])]),e._v(" "),i("li",[i("p",[i("code",[e._v('git reset --hard "head"')]),e._v(" 将缓存区和工作区中未提交的所有file回滚到之前的commit状态")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git checkout -- a.txt")]),e._v(" 将为缓存的文件a.txt撤销修改")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git branch -r")]),e._v(" 查看所有远程分支\n"),i("code",[e._v("git branch origin --delete")]),e._v(" 分支名称(不需要origin)\n"),i("code",[e._v("git branch -r -d origin/feature/MWEB-1337")]),e._v("  删除对应远程分支\n"),i("code",[e._v("origin/feature/MWEB-1337")])])]),e._v(" "),i("li",[i("p",[e._v("git 修改分支名称\neg:"),i("code",[e._v("git branch -m feature/MWEB-1337 feature/OMS-3992")]),e._v(" //将本地 feature/MWEB-1337修改为 feature/OMS-3992")])]),e._v(" "),i("li",[i("p",[e._v("git 查看所有记录\n"),i("code",[e._v("git log --graph --decorate --oneline --all")]),e._v("\n常用的命令：\n"),i("code",[e._v("git log --graph")]),e._v("\n参数解释\n--decorate： 标记会让git log显示每个commit的引用\n--oneline： 一行显示\n--simplify-by-decoration：只显示被branch或tag引用的commit\n--all: 所有分支")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git clean")]),e._v(" 清除还未"),i("code",[e._v("git add")]),e._v(" 的文件")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git checkout .")]),e._v("  放弃所有未暂存的修改，\n"),i("code",[e._v("git checkout -- filename")]),e._v(" 放弃特定的未暂存的文件修改")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("rm filename")]),e._v("  // 删除新增的未暂存的文件\n"),i("code",[e._v("git clean -xdf")]),e._v("  // 删除所有新增的未暂存的文件，慎用，包括gitinnore的东西")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git reset HEAD .")]),e._v("  // 放弃已经暂存的所有文件")])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git branch |grep 'release-' |xargs git branch -d")]),e._v('  // 批量删除分支其中“release-"是指以“release-”开头的分支，可以任意替换 如果强制删除最后可换为"-D"；批量删除远程分支：'),i("code",[e._v("git branch -r| grep -v -E 'master|develop' | sed 's/origin\\///g' | xargs -I {} git push origin :{}")])])]),e._v(" "),i("li",[i("p",[e._v("git记住账号和密码，避免每次操作输入账号，密码可以使用"),i("code",[e._v("git config --global credential.helper store")])])]),e._v(" "),i("li",[i("p",[e._v("git 修改账号密码后，命令行需要清空之前的账号密码使用："),i("code",[e._v("git credential-manager remove | uninstall")])])]),e._v(" "),i("li",[i("p",[i("code",[e._v("git rebase")]),e._v(" 合并多个commit\neg: git rebase -i HEAD~3 将最近的三个commit信息修改，squash 表示此commit信息不保留，pick表示保留，修改之后会进入另一个界面，对此次rebase的信息进行合并\n资料："),i("a",{attrs:{href:"https://blog.csdn.net/csdlwzy/article/details/83379546",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://blog.csdn.net/csdlwzy/article/details/83379546"),i("OutboundLink")],1)])]),e._v(" "),i("li",[i("p",[e._v("git 每次都要输入账号密码，使用"),i("code",[e._v("git config --global credential.helper store")]),e._v("命令再次"),i("code",[e._v("git fetch")]),e._v(" 输入之后就不用再次输入。")])])])])}),[],!1,null,null,null);t.default=v.exports}}]);